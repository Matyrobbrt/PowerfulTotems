plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'io.github.groovymc.modsdotgroovy' version '1.1.2'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

group = 'com.matyrobbrt.powerfultotems'
archivesBaseName = 'powerfultotems'

sourceSets {
    datagen {
        compileClasspath += main.output
    }
}
configurations {
    datagenImplementation.extendsFrom(minecraft)
}
modsDotGroovy.dslVersion = '1.3.0'; modsDotGroovy.platform 'forge'


java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.11.06-1.18.2'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        all {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'powerfultotems'
            mods {
                powerfultotems {
                    source sourceSets.main
                }
            }
        }
        
        client {}
        server {}
        gameTestServer {}

        data {
            workingDirectory project.file('run')
            args '--mod', 'powerfultotems', '--all',
                    '--output', file('src/generated/resources/'),
                    '--existing', file('src/main/resources/') 
            mods {
                powerfultotems {
                    source sourceSets.datagen
                }
            }

        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.1'
}

final manifestAttributes = [
        'Specification-Title'   : 'powerfultotems',
        'Specification-Vendor'  : 'Matyrobbrt',
        'Specification-Version' : '1',
        'Implementation-Title'  : project.name,
        'Implementation-Version': project.jar.archiveVersion,
        'Implementation-Vendor' : 'Matyrobbrt'
]

jar {
    manifest.attributes(manifestAttributes)
    finalizedBy('reobfJar')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
